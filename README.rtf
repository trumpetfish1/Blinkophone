{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 AndaleMono;}
{\colortbl;\red255\green255\blue255;\red47\green255\blue18;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c15686\c99608\c7843;\csgray\c0\c90000;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 DESCRIPTION:\
\
Blinkophone is intended for disabled musicians (or non-musicians) who may suffer from a paralysis, however have the capacity to blink. When a blink is detected by a camera, a MIDI sequence is triggered; they are in control of the timing, but the sequence is predetermined.\
\
Currently, the software runs a blink detector in a loop and then triggers audio playback when a blink is detected.\
\
The blink_detection walkthrough it is based on can be found here:\
https://www.pyimagesearch.com/2017/04/24/eye-blink-detection-opencv-python-dlib/\
 \
And the Audio is played in Pygame, found here:\
https://www.pygame.org/docs/ref/mixer.html\
\
DEPENDENCIES:\
***take care because some, although not most, require homebrew instead of pip\
scipy\
imutils.video\
imutils.video\
imutils\
numpy\
argparse\
imutils\
time\
dlib\
import cv2\
music21\
pygame\
mxm.midifile\
\
\
USAGE:\
After installing dependencies:\
\
1)put /test folder into the following folder: lib/python3.6/site-packages/music21/musicxml/ \
\
2)run in terminal:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs32 \cf2 \cb3 \CocoaLigature0 python detect_blinks_live_music.py --shape-predictor shape_predictor_68_face_landmarks.dat
\f0\fs24 \cf0 \cb1 \CocoaLigature1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
COMMENTS FOR FURTHER DEV:\
mainly, there are two issues: \
1)threading - detection software loop pauses while audio is playing, not allowing for overlapping notes, and also causing spaces between notes. Futher improvements on audio could also be made using sounddevice instead of pygame\
\
2)parsing - probably more importantly, because currently notes and chords are hardcoded. I think music21 would be great for parsing, as it includes hundreds of songs in its library, but the commented code results in NoneType. mxm.midifile is a pretty good alternative for loading midifiles.\
\
3)of course, it would be cool to use blinks for making reactive selections, allowing for control over pitch direction. Pentatonic improvisation for example. However this makes the prediction software more susceptible to false blinks, as currently it averages the two eyelids.}